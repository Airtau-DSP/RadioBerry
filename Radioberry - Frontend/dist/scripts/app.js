function routesConfig(e,t,o){o.html5Mode(!0).hashPrefix("!"),t.otherwise("/"),e.state("home",{url:"/",component:"home"}).state("ssb",{url:"/ssb",component:"ssb"}).state("am",{url:"/am",component:"am"}).state("cw",{url:"/cw",component:"cw"}).state("demo",{url:"/demo",templateUrl:"app/demo/demo.html",controller:"RadioControl"})}routesConfig.$inject=["$stateProvider","$urlRouterProvider","$locationProvider"],angular.module("app",["ui.router","ngWebSocket"]),angular.module("app").component("volume",{templateUrl:"app/widgets/volume_view.html",bindings:{radio:"="},controller:["$scope","RadiostateService",function(e,t){var o=this;e.value=o.radio.volume,o.setVolume=function(e){console.log("Volume "+e+" selected"),o.radio.volume=e,t.updateRadioState(o.radio)}}]}),angular.module("app").component("spectrum",{templateUrl:"app/widgets/spectrum_view.html",bindings:{radio:"="},controller:["$window","$scope","$interval","NotifyingService","WebSocketService",function(e,t,o,r,n){var a=this;a.ws=n,this.canvasElement=e.document.getElementById("visualizer"),n.subscribe(t,function(){i()});var i=function(){function e(){for(n.fillStyle="#808080",n.fillRect(0,0,WIDTH,HEIGHT),n.strokeStyle="#959492",n.lineWidth=.4,n.beginPath(),p=0,m=0;m<HEIGHT+10;m+=20)n.moveTo(10,m),n.lineTo(WIDTH,m),n.fillStyle="#000000",n.font="bold 13px sans-serif",n.fillText("-"+p,0,m),p+=10;for(n.stroke(),n.beginPath(),m=30;m<WIDTH+10;m+=20)n.moveTo(m,0),n.lineTo(m,HEIGHT);n.stroke(),n.lineWidth=1,n.strokeStyle="rgb(0, 0, 0)",n.beginPath();var e=1*(WIDTH-30)/r,a=30,i=600;o!=i&&(o=i,changed=!0);var l=[],d=0,c=!1;n.font="bold 14px sans-serif",n.fillStyle="#959492";for(var s=1,m=0;m<r;m++){s*=-1;var u=t.spectrum[m]*-1*2;if(0===m?n.moveTo(a,u):(c&&(n.stroke(),n.beginPath(),c=!1),n.strokeStyle="rgb(0, 0, 0)",n.lineWidth=1,n.lineTo(a,u)),a+=e,m%(r/8)==0){n.fillStyle="#000000";var g="3.630";g=g.replace(/,/g,"."),n.fillText(g,a,15),l[l.length]=a,6e3*d==24e3&&(sdrspectrumcenter=a),d++}}n.fillStyle="#000000";var g="3.630.000";for(g=g.replace(/,/g,"."),n.fillText(g,WIDTH-30,15),l[l.length]=WIDTH-30,n.stroke(),n.beginPath(),n.strokeStyle="#959492",n.lineWidth=2,m=0;m<l.length;m++)n.moveTo(l[m],0),n.lineTo(l[m],HEIGHT);n.stroke()}var t=new Float32Array(1280);t=a.ws.data.spectrum;var o=0;WIDTH=900,HEIGHT=300,a.canvasElement.width=WIDTH,a.canvasElement.height=HEIGHT;var r=1280,n=a.canvasElement.getContext("2d");n.clearRect(0,0,WIDTH,HEIGHT),e()}}]}),angular.module("app").component("modeselector",{templateUrl:"app/widgets/mode-selector_view.html",bindings:{radio:"=",mode:"="},controller:["$window","$scope","$log","RadiostateService",function(e,t,o,r){var n=this;n.selectedMode=n.mode[n.radio.mode],n.setMode=function(){n.radio.mode=n.selectedMode.code,r.updateRadioState(n.radio)}}]}),angular.module("app").component("frequencycontrol",{templateUrl:"app/widgets/frequency-control_view.html",bindings:{radio:"="},controller:["$window","$scope","$log","RadiostateService",function(e,t,o,r){function n(e){var o=0;"wheelDelta"in e?o=e.wheelDelta:(o=-40*e.detail,o=e.detail),o>0?a.radio.frequency=a.radio.frequency+parseInt(a.radio.frequencystep):a.radio.frequency=a.radio.frequency-parseInt(a.radio.frequencystep),r.updateRadioState(a.radio),t.$apply()}var a=this;console.log(a.radio),a.setFreq=function(){r.updateRadioState(a.radio)};var i=e.document.getElementById("freq");i.addEventListener&&(i.addEventListener("mousewheel",n,!1),i.addEventListener("DOMMouseScroll",n,!1)),freqstep.addEventListener("contextmenu",function(e){return e.preventDefault(),!1}),freqstep.addEventListener("mousedown",function(e){switch(e.which){case 1:step=parseInt(a.radio.frequencystep),step<1e7&&(step=10*step),a.radio.frequencystep=String(step);break;case 2:break;case 3:step=parseInt(a.radio.frequencystep),step>1&&(step/=10),a.radio.frequencystep=String(step);break;default:console.log("Mouse what are you doing...")}r.updateRadioState(a.radio),t.$apply()})}]}),angular.module("app").component("bandwithselector",{templateUrl:"app/widgets/bandwidth-selector_view.html",bindings:{radio:"="},controller:["$scope","RadiostateService",function(e,t){var o=this;e.value=Math.abs(o.radio.high),o.setBandWidth=function(e){console.log("bandwith "+e+" selected"),0==o.radio.mode&&(o.radio.low=-150,o.radio.high=e*-1),1==o.radio.mode&&(o.radio.low=150,o.radio.high=e),2!=o.radio.mode&&6!=o.radio.mode||(o.radio.low=e*-1,o.radio.high=e),t.updateRadioState(o.radio)}}]}),angular.module("app").component("bandselector",{templateUrl:"app/widgets/band-selector_view.html",bindings:{radio:"="},controller:["RadiostateService",function(e){var t=this;t.selectBand=function(o){console.log("band "+o+" selected"),80==o&&(t.radio.frequency=363e4),e.updateRadioState(t.radio)}}]}),angular.module("app").component("attselector",{templateUrl:"app/widgets/att-selector_view.html",bindings:{radio:"="},controller:["$scope","RadiostateService",function(e,t){var o=this;e.value=o.radio.att,o.setAtt=function(e){console.log("att "+e+" selected"),o.radio.att=e,t.updateRadioState(o.radio)}}]}),angular.module("app").component("agcselector",{templateUrl:"app/widgets/agc-selector_view.html",bindings:{radio:"=",agcmode:"="},controller:["$window","$scope","$log","RadiostateService",function(e,t,o,r){var n=this;n.selectedMode=n.agcmode[n.radio.agcmode],n.setAGCMode=function(){n.radio.agcmode=n.selectedMode.code,r.updateRadioState(n.radio)}}]}),angular.module("app").component("agcgainselector",{templateUrl:"app/widgets/agc-gain-selector_view.html",bindings:{radio:"="},controller:["$scope","RadiostateService",function(e,t){var o=this;e.value=120-o.radio.agcgain,o.selectAGCGain=function(e){invert=120-e,console.log("agc gain  "+invert+" selected"),o.radio.agcgain=invert,t.updateRadioState(o.radio)}}]}),angular.module("app").component("ssb",{templateUrl:"app/ssb/ssb.html",controller:function(){this.hello="Hello SSB World!"}}),angular.module("app").factory("WebSocketService",["$window","$rootScope","$websocket",function(e,t,o){var r=o("ws://"+e.location.host+"/ws");return t.spectrumData={},r.onMessage(function(e){t.spectrumData.spectrum=JSON.parse(e.data),t.$emit("spectrum-event")}),{data:t.spectrumData,subscribe:function(e,o){var r=t.$on("spectrum-event",o);e.$on("$destroy",r)}}}]),angular.module("app").service("RadiostateService",["$http",function(e){var t,o="/radioberry/control.do";t=void 0==localStorage.getItem("radiostate")?{frequency:parseInt(1008e3),frequencystep:String(100),mode:parseInt(6),agcmode:parseInt(0),low:parseInt(-4e3),high:parseInt(4e3),agcgain:parseFloat(85),att:parseInt(10)}:JSON.parse(localStorage.getItem("radiostate")),this.getRadioState=function(){return t},this.updateRadioState=function(t){return e.post(o,t),localStorage.setItem("radiostate",JSON.stringify(t)),t}}]),angular.module("app").factory("NotifyingService",["$rootScope",function(e){return{subscribe:function(t,o){var r=e.$on("notifying-service-event",o);t.$on("$destroy",r)},notify:function(){e.$emit("notifying-service-event")}}}]),angular.module("app").component("cw",{templateUrl:"app/cw/cw.html",controller:function(){this.hello="Hello CW World!"}}),angular.module("app").controller("RadioControl",["$scope","RadiostateService",function(e,t){e.radioState=t.getRadioState(),e.modes=[{mode:"LSB",code:0},{mode:"USB",code:1},{mode:"DSB",code:2},{mode:"CWL",code:3},{mode:"CWU",code:4},{mode:"FM",code:5},{mode:"AM",code:6},{mode:"DIGU",code:7},{mode:"SPEC",code:8},{mode:"DIGL",code:9},{mode:"SAM",code:10},{mode:"DRM",code:11}],e.ssbmode=[{mode:"LSB",code:0},{mode:"USB",code:1}],e.agcmode=[{mode:"OFF",code:0},{mode:"LONG",code:1},{mode:"SLOW",code:2},{mode:"MED",code:3},{mode:"FAST",code:4}],e.hello="hello-from-controller-radio-state"}]),angular.module("app").component("am",{templateUrl:"app/am/am.html",controller:function(){this.hello="Hello AM World!"}}),angular.module("app").component("home",{templateUrl:"app/home.html",controller:function(){this.hello="Hello World!"}}),angular.module("app").run(["$templateCache",function(e){e.put("app/home.html",'<header>\r\n\t<h1>The Radioberry, a nice small standalone amateur HF transceiver</h1>\r\n\t<h2>The radioberry is a radio card connected to a raspberrypi 2 or 3</h2>\r\n\r\n  <img ng-src="radioberry/app/images/radioberry.jpg" width="200px" height="155px"> \r\n\r\n  <h3> The backend uses a server. </h3>\r\n\r\n\t<h3> This makes it possible to create a specific frontend. The frontend presented here uses a browser using some \'modern\' frontend techniques.</h3>\r\n\r\n\r\n</header>\r\n\r\n<body>\r\n\r\n<br>\r\n\t<h4>The available widgets can be found on the demo widgets page; these widgets are actually controlling the radio.</h4>\r\n\t<a href="demo">Demo radio control widgets</a>\r\n\t \r\n  <h4>For the following modes there is already a link; using the widgets and styling will give your own radio experience! : </h4>\r\n\t<li><a href="ssb">SSB</a></li>\r\n\t<li><a href="am">AM</a></li>\r\n\t<li><a href="cw">CW</a></li>\r\n\t<li> hope many to come also for digital modes...</li>\r\n</body>\r\n<footer>\r\n\t<h4>Provided by Johan PA3GSB</h4>\r\n</footer>'),e.put("app/am/am.html",'<a href="home">Home</a>\r\n\r\n<h1>{{ $ctrl.hello }}</h1>\r\n\r\n<p> happy programming to implement a am mode </p>\r\n'),e.put("app/cw/cw.html",'<a href="home">Home</a>\r\n<h1>{{ $ctrl.hello }}</h1>\r\n\r\n<p> happy programming to implement a cw mode </p>\r\n'),e.put("app/demo/demo.html",'<a href="home">Home</a>\r\n\r\n\t<h1> Radio Widgets / Control Demo Page</h1>\r\n\r\n<p> Presenting the radio controls; these controls can be used to make your own fancy radio userinterface!! </p>\r\n<p> The idea is that the demo page actually controls the radioberry radio!</p>\r\n\r\n<p> Radio control properties, state of the radio {{radioState}}</p>\r\n\r\n\r\n\t\t<bandselector radio="radioState"></bandselector>\r\n\t\r\n\t\t<attselector radio="radioState"> </attselector>\r\n\r\n\t\t<frequencycontrol radio="radioState"></frequencycontrol>\r\n\r\n\t\t<agcgainselector radio="radioState"></agcgainselector>\r\n\r\n\t\t<spectrum radio="radioState"> </spectrum>\r\n\r\n\r\n\t\t<modeselector radio="radioState" mode="modes"></modeselector>\r\n\r\n\t\t<agcselector radio="radioState" agcmode="agcmode"></agcselector>\r\n\r\n\t\t<bandwithselector radio="radioState"></bandwithselector>\r\n\r\n\t\t<volume radio="radioState"></volume>\r\n\r\n<br><br><br><br>\r\n\t\t<p>the widgets as shown will be described...i have to think about styling.. </p>\r\n\t\r\n\t\t<p> widgets to come:\r\n\t\t\t</p><li>filters</li>\r\n\t\t\t<li>volume</li>\r\n\t\t\t<li>nr</li>\r\n\t\t\t<li>anf</li>\r\n\t\t\t<li> nb </li>\t\r\n\t\t\t<li> spectrum </li>\r\n\t\t\t<li> waterfall </li>\r\n\t\t\t<li> and many more...</li>\r\n\r\n\t\t<p></p>\r\n\r\n\r\n\r\n\r\n\t\t\r\n\r\n'),e.put("app/ssb/ssb.html",'\r\n<a href="home">Home</a>\r\n\r\n\r\n\r\n\r\n\r\n<h1>{{ $ctrl.hello }}</h1>\r\n\r\n\r\n\r\n\r\n\r\n'),e.put("app/widgets/agc-gain-selector_view.html",'<input type="range" min="0" max="120" step="1" class="vranger" ng-model="value" ng-change="$ctrl.selectAGCGain(value)">AGC Gain\r\n\r\n<style>\r\n.vranger {\r\n  margin-top: 50px;\r\n   transform: rotate(270deg);\r\n  -moz-transform: rotate(270deg); /*do same for other browsers if required*/\r\n}\r\n</style>\r\n\r\n'),e.put("app/widgets/agc-selector_view.html",'   <div> \r\n        <select name="agcmode" ng-model="$ctrl.selectedMode" ng-change="$ctrl.setAGCMode()" ng-options="agcmode.mode for agcmode in $ctrl.agcmode track by agcmode.code">\r\n        </select>\r\n    </div>'),e.put("app/widgets/att-selector_view.html",'<input type="range" min="0" max="31" step="1" ng-model="value" ng-change="$ctrl.setAtt(value)"><label>ATT</label>\r\n\r\n\r\n\r\n'),e.put("app/widgets/band-selector_view.html",'\r\n\r\n<button ng-click="$ctrl.selectBand(160)">160m</button>\r\n<button ng-click="$ctrl.selectBand(80)">80m</button>\r\n<button ng-click="$ctrl.selectBand(40)">40m</button>\r\n<button ng-click="$ctrl.selectBand(20)">20m</button>\r\n<button ng-click="$ctrl.selectBand(10)">10m</button>\r\n'),e.put("app/widgets/bandwidth-selector_view.html",'<input type="range" min="150" max="5150" step="1" ng-model="value" ng-change="$ctrl.setBandWidth(value)"><label>Bandwidth</label>'),e.put("app/widgets/frequency-control_view.html",'<!--style="display:none" beide componenten eventueel niet laten zien-->\r\n<div>\r\n\t<input id="freq" type="number" step="1000" ng-min="1000" ng-max="60000000" ng-model="$ctrl.radio.frequency" ng-change="$ctrl.setFreq()">Frequency\r\n\t<div id="freqstep"> <select name="Frequency Step" ng-model="$ctrl.radio.frequencystep">\r\n\t\t\t\t\t<option value="1">1 Hz</option>\r\n\t\t\t\t\t<option value="10">10 Hz</option>\r\n\t\t\t\t\t<option value="100">100 Hz</option>\r\n\t\t\t\t\t<option value="1000">1 KHz</option>\r\n\t\t\t\t\t<option value="10000">10 KHz</option>\r\n\t\t\t\t\t<option value="100000">100 KHz</option>\r\n\t\t\t\t\t<option value="1000000">1 MHz</option>\r\n\t\t\t\t\t<option value="10000000">10 MHz</option>\r\n\t</select> </div>\r\n\t\r\n</div>'),e.put("app/widgets/mode-selector_view.html",'    <div>\r\n        <select name="radiomode" ng-model="$ctrl.selectedMode" ng-change="$ctrl.setMode()" ng-options="mod.mode for mod in $ctrl.mode track by mod.code">\r\n        </select>\r\n    </div>'),e.put("app/widgets/s-meter_view.html",""),e.put("app/widgets/spectrum_view.html",'<canvas id="visualizer"></canvas>'),e.put("app/widgets/volume_view.html",'<input type="range" min="0" max="100" step="1" ng-model="value" ng-change="$ctrl.setVolume(value)"><label>Volume</label>')}]),angular.module("app").config(routesConfig);
//# sourceMappingURL=../maps/scripts/app.js.map
